openapi: "3.0.2"
info:
  description: |
    Only english letters are allowed as values in `string` fields.

    Package tracking callbacks
    ==========================

    There is a possibility to receive POST requests on client's endpoint with a package tracking event:
    ```http
    POST https://clients.endpoint/path HTTP/1.1
    Content-Type: application/json
    Origin: https://import.veloxhub.us

    {
      "tracking_number": "4207047192748927005373000000007557",
      "event_date": "2002-10-02T10:00:00-05:00",
      "zip": "71203",
      "state": "LA",
      "city": "Monroe",
      "address": "205 N Mcguire Ave",
      "description": "Delivered",
      "code": "DEL",
      "estimated_delivery_date": "2002-10-05",
      "weight_g": 760
    }
    ```
    Client's side should respond with `2xx` (success) status code if the message is processed correctly. Otherwise, Velox repeats the same request with gradually degrading frequency.
    The same event might be sent more than once. Thus, it's highly recommended to treat an event with `tracking_number` and `event_date` pair as the unique event. 
    Depending on the event `weight_g` and `estimated_delivery_date` attributes might not be presented. List of all possible values of `description` and `code` fields is at the `/tracking/{tracking_number}` method documentation section.
  title: Velox Import API
  version: 0.9.0

paths:
  /city-state-by-zip/{zip}:
    parameters:
      - name: zip
        description: Only first 5 digits are used for looking up. Both \d{5} and \d{5}-\d{4} are allowed formats.
        in: path
        required: true
        schema:
          type: string
          example: "81152"
    get:
      tags: ['All environments']
      description: Returns the city and state corresponding to the given ZIP code.
      security:
        - jwtAuth: []
      responses:
        200:
          description: City and state for provided ZIP code.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      city:
                        type: string
                        example: "SAN LUIS"
                      state:
                        type: string
                        example: "CO"
        400:
          description: Invalid ZIP format
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          description: ZIP is not found
  /shipping-zones-by-zip/{zip}:
    parameters:
      - name: zip
        description: Only first 5 digits are used. Both \d{5} and \d{5}-\d{4} are allowed formats.
        in: path
        required: true
        schema:
          type: string
          example: "81152"
    get:
      tags: ['All environments']
      description: Returns shipping zones for supported airports
      security:
        - jwtAuth: []
      responses:
        200:
          description: Shipping zones.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        airport_iata_code:
                          type: string
                          minLength: 3
                          maxLength: 3
                          example: "JFK"
                          enum:
                            - "JFK"
                            - "ORD"
                            - "LAX"
                        shipping_zone:
                          type: integer
                          example: 7
        400:
          description: Invalid ZIP format
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          description: ZIP is not found
  /packages:
    parameters:
      - name: exclude
        description: |
          Exclude fields from the response. Allowed fields to exclude: `label` (to reduce net traffic if label is not needed right now).
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        style: form
        explode: false
    post:
      tags: ['All environments']
      description: |
        Create a package and register it in USPS

        HAWB
        ====
        We will reference the shipment internally using the last 11 digits in your HAWB, ignoring any letters. Data sent back to you will use your full HAWB.
        US CBP requires that the HAWB be unique among all the shipments on the same MAWB. Because of the conversion we do on your full HAWB this means that the last 11 digits of your HAWB have to be unique among shipments on the current MAWB. For example:
        | Your full HAWB      | HAWB sent to US CBP  | Result             |
        |---------------------|----------------------|-------------------:|
        | 543210987654321     |  10987654321          |  **OK**            |
        | 54321098765432ABCD1 |  10987654321          |  **HAWB REJECTED** |
        This would be an error. Even though the 2 full HAWBs are different, they are the same when converted to the values which are sent to US CBP.
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ['ship_to', 'dimensions', 'customs']
              properties:
                induct_at_airport_iata_code:
                  type: string
                  description: Specifies where the package will be expected and finally inducted
                  minLength: 3
                  maxLength: 3
                  example: "LAX"
                  enum:
                    - "JFK"
                    - "ORD"
                    - "LAX"
                ship_to:
                  type: object
                  required: ['person_name', 'phone', 'street', 'city', 'state', 'zip']
                  properties:
                    person_name:
                      type: string
                      example: "Alejandro Lagos"
                      maxLength: 35
                    company_name:
                      type: string
                      example: "Amazon"
                      maxLength: 35
                    phone:
                      type: string
                      maxLength: 20
                      pattern: '^\d+$'
                      example: "5045555555"
                    street:
                      type: string
                      maxLength: 70
                      example: "2615 N CAUSEWAY BLVD E110"
                    city:
                      type: string
                      maxLength: 35
                      example: "MANDEVILLE"
                    state:
                      type: string
                      example: "LA"
                      minLength: 2
                      maxLength: 2
                    zip:
                      description: "Both the five-digit (left zero padded if less than five digits) and nine-digit (called ZIP+4) formats are allowed."
                      type: string
                      pattern: "[0-9]{5}|[0-9]{5}-[0-9]{4}"
                      minLength: 5
                      maxLength: 10
                      example: "70471-6438"
                dimensions:
                  type: object
                  description: |
                    For all packages configure length as the longest dimension, followed by height, followed by width.
                    A package cannot exceed 2743.2 mm of (length + 2 * (width + height)).
                  required: ['weight_g', 'length_mm', 'width_mm', 'height_mm']
                  properties:
                    weight_g:
                      type: number
                      format: integer
                      minimum: 1
                      example: 370
                    length_mm:
                      type: number
                      format: integer
                      minimum: 1
                      example: 15
                    width_mm:
                      type: number
                      format: integer
                      minimum: 1
                      example: 30
                    height_mm:
                      type: number
                      format: integer
                      minimum: 1
                      example: 40
                customs:
                  type: object
                  required: ['hawb', 'documents', 'declared_value_usd', 'description', 'packaging', 'shipper']
                  properties:
                    hawb:
                      description: |
                        Last 11 digits (letters are ignored) must be unique among all shipments. See the HAWB for more information. At least 6 digits must be in a HAWB.
                        HAWB must be unique among all non deleted (see DELETE /packages/{tracking_number} method) packages
                      type: string
                      pattern: "^[A-Z0-9]{6,40}$"
                      minLength: 6
                      maxLength: 40
                      example: "54321098765432ABC1"
                    documents:
                      type: boolean
                      example: false
                    declared_value_usd:
                      description: "0 for documents only, positive in other case"
                      type: number
                      minimum: 0.00
                      maximum: 799.99
                      example: 499.99
                      multipleOf: 0.01
                    description:
                      type: string
                      minLength: 2
                      maxLength: 200
                      example: "Dead Souls 2"
                    packaging:
                      type: string
                      maxLength: 1
                      enum:
                        - "L" # Letter
                        - "P" # IBC Pak
                        - "B" # Box
                        - "O" # Other
                      example: "P"
                    shipper:
                      type: object
                      required: ['name', 'street', 'city', 'zip', 'country', 'phone']
                      properties:
                        name:
                          type: string
                          maxLength: 250
                          example: "Nikolai Gogol"
                        street:
                          type: string
                          maxLength: 500
                          example: "Marko Vovchok St, h. 18A"
                        city:
                          type: string
                          maxLength: 250
                          example: "Velyki Sorochyntsi"
                        zip:
                          type: string
                          pattern: "^[0-9]{,10}$"
                          maxLength: 10
                          example: "4074"
                        country:
                          type: string
                          example: "UA"
                          enum: ["UA"]
                        phone:
                          type: string
                          pattern: '^\d{,15}$'
                          maxLength: 15
                          example: "381000000000"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      tracking_number:
                        description: In demo mode backend tier returns UUID. 34-digit tracking number is in production mode.
                        type: string
                        example: "4207047192748927005373000000007557"
                      label:
                        description: base64encoded PDF
                        type: string
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'

  /packages/{tracking_number}/label:
    parameters:
      - name: tracking_number
        in: path
        required: true
        schema:
          type: string
          example: "4207047192748927005373000000007557"
      - name: format
        description: Specifies the response format. `json` is the default format.
        in: query
        required: false
        schema:
          type: string
          example: "binary"
          enum:
            - binary
            - json
    get:
      tags: ['All environments']
      description: Returns package label. Available for a month after label creation.
      security:
        - jwtAuth: []
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      label:
                        description: base64encoded PDF
                        type: string
            application/pdf:
              schema:
                description: |
                  Binary representation of a PDF file. Response contains `Content-Disposition: attachment; filename="{track_number}.pdf"` header.
                type: string
                format: binary
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        410:
          description: Gone. Label is expired and was removed.

  /packages/{tracking_number}:
    parameters:
      - name: tracking_number
        in: path
        required: true
        schema:
          type: string
          example: "4207047192748927005373000000007557"
    delete:
      tags: ['All environments']
      description: Voids a package. Method is not allowed if a package was manifested.
      security:
        - jwtAuth: []
      responses:
        200:
          description: The package is voided
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /tracking/{tracking_number}:
    parameters:
      - name: tracking_number
        in: path
        required: true
        schema:
          type: string
          example: "4207047192748927005373000000007557"
    get:
      tags: ['All environments']
      description: |
        Returns package tracking history
        
        | Code    | Description |
        |---------|-----------------------------------|
        | ADU      |   Arrived at USPS delivery unit   |
        | ADU      |   Received at Opening Unit    |
        | ADU      |   Arrived at USPS Facility    |
        | ADU      |   Accepted at USPS Destination Sort Facility  |
        | ANF      |   Arrived at Induction Facility   |
        | AUSPS      |   DELIVERED TO POSTAL AGENT   |
        | AUSPS      |   ARRIVED AT FACILITY |
        | AUSPS      |   ARRIVAL AT POST OFFICE  |
        | CC1      |   Client Custom Event 1   |
        | CEA      |   Enroute Arrived |
        | CED      |   Enroute Departed    |
        | CED      |   Tendered to Returns Agent   |
        | CED      |   Departed Shipping Partner Facility, USPS Awaiting Item  |
        | CED      |   Departed Agent Facility |
        | CEP      |   Picked Up by Shipping Partner, USPS Awaiting Item   |
        | CEP      |   Arrived Shipping Partner Facility, USPS Awaiting Item   |
        | CEP      |   Arrived Agent Facility  |
        | CEP      |   Delivered to Agent  |
        | CEP      |   Picked Up And Processed By Agent    |
        | DEL      |   Delivered   |
        | DEL      |   Available for Pickup    |
        | DEL      |   Tendered to Military Agent  |
        | DEL      |   Held at Post Office, At Customer    |
        | DEL      |   Delivered to Agent  |
        | DEL      |   Received by Agent   |
        | DEL      |   Recipient Notified by Agent |
        | DEL      |   Delivered to Recipient by Agent |
        | DEL      |   Delivered to Agent by Merchant  |
        | DEL      |   DELIVERED BY BROKER |
        | DEL      |   DELIVERED (WITH SIGNATURE)  |
        | DEL      |   DELIVERED DAMAGED   |
        | DEL      |   ATTEMPTED DELIVERY ABROAD   |
        | DEL      |   DELIVERED   |
        | DEL      |   INTERNATIONAL DELIVERED WITH SIGNATURE  |
        | DEL      |   PARTIAL DELIVERY    |
        | DELEX      |   Unable to deliver item, problem with address    |
        | DELEX      |   Arrived at USPS Facility    |
        | DELEX      |   Seized by Law Enforcement. Please contact US Postal Inspection Service for further information. |
        | DELEX      |   Visible Damage  |
        | DELEX      |   In Transit  |
        | DELEX      |   No Access   |
        | DELEX      |   Dead Mail / Disposed by Post Office |
        | DELEX      |   Dead Mail / Sent to Recovery Center |
        | DELEX      |   Delivery Exception - Local Weather Delay    |
        | DELEX      |   Undeliverable to Recipient by Agent |
        | DELEX      |   Rescheduled to Next Delivery Day.   |
        | DELEX      |   Delivery Exception, Animal Interference |
        | DELEX      |   BAD ADDRESS |
        | DELEX      |   BUMPED DELAY    |
        | DELEX      |   CLOSED ON ARRIVAL   |
        | DELEX      |   CLEARANCE DELAY |
        | DELEX      |   CUSTOMER MOVED  |
        | DELEX      |   DISPOSAL    |
        | DELEX      |   Your Package Delivery is Delayed    |
        | DELEX      |   HOLIDAY DELAY   |
        | DELEX      |   R.T.S: IMPROPER DOCUMENTATION   |
        | DELEX      |   R.T.S: ABANDONMENT  |
        | DELEX      |   R.T.S: DUTY NONPAYMENT  |
        | DELEX      |   MISSED DELIVERY CYCLE   |
        | DELEX      |   MISCODE |
        | DELEX      |   MISSORT |
        | DELEX      |   NOT DELIVERED   |
        | DELEX      |   NOT HOME    |
        | DELEX      |   Processing Exception, Other Delay   |
        | DELEX      |   REFUSED DELIVERY    |
        | DELEX      |   REFUSED ENTRY BY CUSTOMS    |
        | DELEX      |   SHIPMENT STOPPED    |
        | DELEX      |   Processing Exception, Regional Transportation Delay |
        | DELEX      |   Processing Exception, Regional Weather Delay    |
        | DELU      |   Delivered to Partner Facility   |
        | DNF      |   Departing Induction Facility    |
        | DRC      |   Delivered to Return Center  |
        | DUSPS      |   Picked Up by Shipping Agent |
        | DUSPS      |   DEPARTED FACILITY   |
        | DUSPS      |   Departed USPS Facility  |
        | DUSPS      |   Departed Post Office    |
        | FOR      |   Forwarded   |
        | IPS      |   Inducted into Induction Network |
        | LC      |   Label Created   |
        | NL      |   Notice Left |
        | NL      |   Business Closed |
        | NL      |   Notice Left (Receptacle Blocked)    |
        | NL      |   Notice Left (Receptacle Full/Item Oversized)    |
        | NL      |   Notice Left (No Secure Location Available)  |
        | NL      |   Notice Left (No Authorized Recipient Available) |
        | NULL      |   Merchant Order Receipt Notification, USPS Awaiting Item |
        | NULL      |   Return Receipt Associated   |
        | NULL      |   Shipping Label Created, USPS Awaiting Item  |
        | OFD      |   Out For Delivery    |
        | OFD      |   OUT FOR DELIVERY    |
        | OFD      |   Expected Delivery   |
        | OFD      |   Out for Delivery    |
        | OMC      |   Electronic Information Sent to USPS |
        | OMR      |   Pre-Shipment Info Sent to USPS, USPS Awaiting Item  |
        | PSC      |   Shipped from Client |
        | PUU      |   USPS in possession of the item. |
        | REF      |   Refused |
        | RTS      |   Return to Sender    |
        | RTS      |   Return to Sender due to Incorrect Address   |
        | RTS      |   Return to Sender due to Insufficient Address    |
        | RTS      |   Return to Sender because the addressee moved and left no forwarding address.    |
        | RTS      |   Return to Sender because the forwarding order for this address is no longer valid.  |
        | RTS      |   Return to Sender because the specified delivery address was unknown.    |
        | RTS      |   Return to Sender because the address was vacant.    |
        | RTS      |   Unclaimed. Return to Sender |
        | RTS      |   Processed through USPS Facility |
        | RTS      |   Customer Recall |
        | RTS      |   FOREIGN RETURN TO SENDER    |
        | RTS      |   RETURNED TO CONSIGNOR   |
        | UPROC      |   In Transit  |
        | UPROC      |   Available for Pickup    |
        | UPROC      |   Tendered to Postal Service  |
        | UPROC      |   FOREIGN ACCEPTANCE  |
        | UPROC      |   Arrived USPS Sort Facility  |
        | UPROC      |   HANDOFF TO INTERMEDIATE AIRLINE CARRIER |
        | UPROC      |   RECEIVED FROM INTERMEDIATE AIRLINE CARRIER  |
        | UPROC      |   INTERMEDIATE TRANSFER AIRPORT   |
        | UPROC      |   ACCEPTED BY ORIGIN AIRLINE CARRIER  |
        | UPROC      |   ARRIVED AT INTERNATIONAL SERVICE CENTER |
        | UPROC      |   ARRIVED IN DESTINATION COUNTRY  |
        | UPROC      |   ORIGIN AIRLINE CARRIER DEPARTED/UPLIFT  |
        | UPROC      |   FOREIGN ARRIVAL AT OUTWARD OFFICE   |
        | UPROC      |   Customs Clearance   |
        | UPROC      |   INTO CUSTOMS    |
        | UPROC      |   OUT OF CUSTOMS  |
        | UPROC      |   Received by US Postal Service from US Customs   |
        | UPROC      |   FOREIGN INTERNATIONAL DISPATCH  |
        | UPROC      |   AWAITING CONSIGNEE COLLECTION   |
        | UPROC      |   INBOUND INTO CUSTOMS    |
        | UPROC      |   INBOUND OUT OF CUSTOMS  |
        | UPROC      |   RELEASE FROM CUSTOMS/BOND   |
        | UPROC      |   PROCESSED THROUGH OFFICE OF EXCHANGE    |
        | UPROC      |   INTERNATIONAL DISPATCH READY    |
        | UPROC      |   TRANSIT MAIL DISPATCH   |
        | UPROC      |   CUSTOMS CLEARANCE   |
        | UPROC      |   ENROUTE ARRIVAL |
        | UPROC      |   ENROUTE DEPARTURE   |
        | UPROC      |   Departed USPS Facility  |
        | UPROC      |   CUSTOMS CLEARANCE PROCESSING COMPLETE   |
        | UPROC      |   HELD FOR PAYMENT    |
        | UPROC      |   RECEIPT INTO CUSTOMS/BOND   |
        | UPROC      |   ARRIVAL AT TRANSIT OFFICE FROM EXCHANGE |
        | UPROC      |   DEPART FROM TRANSIT OFFICE OF EXCHANGE  |
        | UPROC      |   FORWARDING TO US CUSTOMS    |
        | UPROC      |   CONTACT US CUSTOMS  |
        | UPROC      |   FORWARDED BY USPS   |
        | UPROC      |   PICKED UP AT CUSTOMS UNIT   |
        | UPROC      |   Processing Exception    |
        | UPROC      |   ORIGIN POST IS PREPARING SHIPMENT   |
        | UPROC      |   In Transit to Destination   |
        | UPROC      |   Accepted at USPS Origin Facility    |
        | UPROC      |   Processed at Destination Facility   |
        | UPROC      |   ON HOLD |
        | UPROC      |   ORIGINATING PMPC SCAN   |
        | UPROC      |   Sorting Complete    |
        | UPROC      |   EPG ORIGIN POST IS PREPARING SHIPMENT   |
        | UPROC      |   PROCESSED AT ORIGIN |
        | UPROC      |   SHIPMENT PICK UP    |
        | UPROC      |   SERVICE CHANGE  |
        | UPROC      |   TRANSIT MAIL ARRIVAL    |
        | UPROC      |   Shipment Received, Package Acceptance Pending   |
        | UPROC      |   ONFORWARDED TO THIRD PARTY  |
        | UPROC      |   TRANSFERRED THROUGH SERVICE CENTER  |
        | UPROC      |   Accepted at USPS Facility   |
        | UPROC      |   Reminder to Schedule Redelivery of your item    |
        | UPROC      |   Redelivery Scheduled    |
        | UPROC      |   WITH COURIER    |
        | VLX       | pallet arrived at customs |
        | VLX       | pallet arrived at airport |
        | VLX       | pallet in process at customs  |
        | VLX       | pallet left customs |
        | VLX       | pallet held at customs  |
      security:
        - jwtAuth: []
      responses:
        200:
          description: Tracking history
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    required: ['events']
                    properties:
                      weight_g:
                        description: Measured by the carrier.
                        type: number
                        format: integer
                        minimum: 1
                        example: 370
                      tracking_number:
                        type: string
                        example: "4207047192748927005373000000007557"
                        maxLength: 60
                      events:
                        type: array
                        items:
                          type: object
                          required: ['tracking_number', 'event_date', 'zip', 'state', 'city', 'address', 'location', 'description', 'code']
                          description: Each event represents barcode scan
                          properties:
                            event_date:
                              type: string
                              format: datetime # RFC3339
                              example: "2002-10-02T10:00:00-05:00"
                            zip:
                              type: string
                              maxLength: 10
                              example: "81152"
                            state:
                              type: string
                              example: "LA"
                              minLength: 2
                              maxLength: 2
                            city:
                              type: string
                              example: "SAN LUIS"
                              maxLength: 35
                            address:
                              type: string
                              example: "Salazar st 5"
                            location:
                              type: string
                              description: Concatenation of `zip`, `city`, `state` and `address` fields
                              example: "81152, SAN LUIS, CO, Salazar st 5"
                            description:
                              type: string
                              maxLength: 1000
                              description: List of all available descriptions is above
                              example: "Delivered"
                            code:
                              type: string
                              maxLength: 50
                              description: List of all available codes is above
                              example: "DEL"
                            estimated_delivery_date:
                              type: string
                              format: datetime
                              example: "2002-15-02"
                            
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'

  /manifests:
    post:
      tags: ['All environments']
      description: |
        Creates a manifest

        Validating MAWBs
        ================

        The IATA and US Customs rules for IATA MAWB's require that all MAWB's have a three digit Airline prefix and then eight digits. Those eight digits are a seven digit serial number and a mod 7 (unweighted) check digit.
        Using the MAWB 180-62148741 as the example, the airline prefix is 180, the seven digit serial number is 6214874, and the check digit is a 1.
        To confirm that 1 is the correct mod 7 check digit, you can determine the check digit two different ways. Method one:
        1. Divide the seven digit serial number by `7`
                   `6214874 / 7 = 887839.1428...`
        2. multiply first number after decimal by `7`
                    `.1 x 7 = 0.7`
        3. round the result up, to determine the check digit
                    `0.7` rounds up to `1`
                    the check digit is `1` (if the result were a whole
                      number, then no rounding is required)
          and method two:
        1. Divide the non-check digits by `7`
                   `6214874 / 7 = 887839.1428...`
        2. multiply the integer result by `7`
                    `887839 x 7 = 6214873`
        3. The difference between the number you started with and the result
           of step 2 is the check digit:
                   `6214874 - 6214873 = 1`
                    the check digit is `1`
        These calculations confirm that `62148741` is a valid MAWB suffix, and as long as the `180-` prefix is the correct airline prefix, you know you have a valid MAWB.
      security:
        - jwtAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ['code', 'departure_date', 'origin_iata_airport_code', 'destination_iata_airport_code', 'flight_number', 'mawb', 'tracking_numbers']
              properties:
                code:
                  description: "Use this field to uniquely identify this manifest"
                  type: string
                  minLength: 3
                  maxLength: 50
                  example: "US2019011303"
                departure_date:
                  description: "The date in RFC3339 that the flight LEAVES the origin country; it can't be older than 7 days ago or newer than 4 days from now"
                  type: string
                  format: datetime
                  example: "2002-10-02T10:00:00-05:00"
                origin_airport_iata_code:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: "KBP"
                destination_airport_iata_code:
                  type: string
                  minLength: 3
                  maxLength: 3
                  example: "JFK"
                  enum:
                    - "JFK"
                    - "ORD"
                    - "LAX"
                flight_number:
                  description: "The airline and flight number"
                  type: string
                  minLength: 3
                  maxLength: 20
                  example: "AA1234"
                mawb:
                  description: |
                    This field contains the consolidation's Master Air Waybill number (11 digits). It is required and it must match the MAWB filed by the airline; if this is not the case, US Customs will NOT release your material. Furthermore, airline MAWBs have a mod-7 check digit, and we will reject files where the check-digit is invalid. See the Validating MAWBs for more information.
                  minLength: 11
                  maxLength: 11
                  pattern: "[0-9]{11}"
                  example: "18062148741"
                  type: string
                tracking_numbers:
                  type: array
                  items:
                    description: USPS package tracking number
                    type: string
                    example: "4207047192748927005373000000007557"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      id:
                        description: Created manifest ID
                        type: string
                        format: uuid
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'

  /:
    delete:
      tags: ['Staging']
      description: Deletes all objects created by the client
      security:
        - jwtAuth: []
      responses:
        202:
          description: Accepted
        401:
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    BadRequest:
      description: Bad request.
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  description: an error description
                  type: string
                  example: "package dimensions are required"
    Unauthorized:
      description: A token is not provided or is invalid.
    Forbidden:
      description: User is forbidden.
    NotFound:
      description: Cant find the resource.
